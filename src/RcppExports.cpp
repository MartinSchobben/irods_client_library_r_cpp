// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// ienv_
std::map<std::string, std::string> ienv_();
RcppExport SEXP _rirods_ienv_() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(ienv_());
    return rcpp_result_gen;
END_RCPP
}
// ils_
Rcpp::DataFrame ils_(std::vector< std::string > args);
RcppExport SEXP _rirods_ils_(SEXP argsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector< std::string > >::type args(argsSEXP);
    rcpp_result_gen = Rcpp::wrap(ils_(args));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rirods_ienv_", (DL_FUNC) &_rirods_ienv_, 0},
    {"_rirods_ils_", (DL_FUNC) &_rirods_ils_, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_rirods(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
